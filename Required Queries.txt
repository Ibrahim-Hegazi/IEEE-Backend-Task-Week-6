-- Lab 4 Quries

--Display (Using Union Function)
-- The name and the gender of the dependence that's gender is Female and depending on Female Employee.
-- And the male dependence that depends on Male Employee.
SELECT d.Dependent_name, d.Sex 
FROM Dependent d 
JOIN Employee e ON d.ESSN = e.SSN 
WHERE d.Sex = 'Female' AND e.Sex = 'Female'
UNION
SELECT d.Dependent_name, d.Sex 
FROM Dependent d 
JOIN Employee e ON d.ESSN = e.SSN 
WHERE d.Sex = 'Male' AND e.Sex = 'Male';


--For each project, list the project name and the total hours per week (for all employees) spent on that project.
SELECT p.Pname, SUM(w.Hours) AS TotalHoursPerWeek 
FROM Project p 
JOIN Works_for w ON p.Pnumber = w.Pno 
GROUP BY p.Pname;

--Display the data of the department which has the smallest employee ID over all employees' ID.
SELECT * FROM Departments WHERE Dnum IN (SELECT MIN(SSN) FROM Employee);

--For each department, retrieve the department name and the maximum, minimum and average salary of its employees.
SELECT Dname,
       MAX(Salary) AS MaxSalary,
       MIN(Salary) AS MinSalary,
       AVG(Salary) AS AvgSalary
FROM Departments
JOIN Employee ON Dnum = DNO
GROUP BY Dname;

--List the last name of all managers who have no dependents.
SELECT Lname
FROM Employee
WHERE SSN NOT IN (SELECT ESSN FROM Dependent)
  AND SSN IN (SELECT MGRSSN FROM Departments);

--For each department-- if its average salary is less than the average salary of all employees-- display its number, name and number of its employees.
SELECT DNO, Dname, COUNT(*) AS NumEmployees
FROM Employee
JOIN Departments ON DNO = DNUMBER
GROUP BY DNO
HAVING AVG(Salary) < (SELECT AVG(Salary) FROM Employee);

--Retrieve a list of employees and the projects they are working on ordered by department and within each department, ordered alphabetically by last name, first name.
SELECT e.Fname, e.Lname, p.Pname
FROM Employee e
JOIN Works_for w ON e.SSN = w.ESSN
JOIN Project p ON w.Pno = p.Pnumber
ORDER BY e.Lname, e.Fname, p.Pname;

--Try to get the max 2 salaries using subquery
SELECT
    (SELECT MAX(Salary) FROM Employee) AS MaxSalary,
    (SELECT MAX(Salary) FROM Employee WHERE Salary NOT IN (SELECT MAX(Salary) FROM Employee)) AS SecondMaxSalary;

--Get the full name of employees that is similar to any dependent name
SELECT DISTINCT e.Fname, e.Lname
FROM Employee e
WHERE EXISTS (
    SELECT 1
    FROM Dependent d
    WHERE e.Fname LIKE CONCAT('%', d.Dependent_name, '%')
       OR e.Lname LIKE CONCAT('%', d.Dependent_name, '%')
);

--Try to update all salaries of employees who work in Project ‘Al Rabwah’ by 30% 
UPDATE Employee
SET Salary = Salary * 1.3
WHERE SSN IN (
    SELECT DISTINCT w.ESSN
    FROM Works_for w
    JOIN Project p ON w.Pno = p.Pnumber
    WHERE p.Pname = 'Al Rabwah'
);

--Display the employee number and name if at least one of them have dependents (use exists keyword)
SELECT e.SSN, e.Fname, e.Lname
FROM Employee e
WHERE EXISTS (
    SELECT 1
    FROM Dependent d
    WHERE d.ESSN = e.SSN
);

--In the department table insert new department called "DEPT IT" , with id 100, employee with SSN = 112233 as a manager for this department. The start date for this manager is '1-11-2006'
INSERT INTO Departments(Dnum, Dname, MGRSSN, [MGRStart Date])
VALUES (100, 'DEPT IT', 112233, '2006-11-01');

--Do what is required if you know that : Mrs.Noha Mohamed(SSN=968574)  moved to be the manager of the new department (id = 100), and they give you(your SSN =102672) her position (Dept. 20 manager) 
	--First try to update her record in the department table
	UPDATE department
	SET manager_id = 968574
	WHERE dept_id = 100;
	--Update your record to be department 20 manager.
	UPDATE department
	SET manager_id = 102672
	WHERE dept_id = 20;
	--Update the data of employee number=102660 to be in your teamwork (he will be supervised by you) (your SSN =102672)
	UPDATE employee
	SET supervisor_id = 102672
	WHERE emp_id = 102660;


--Unfortunately the company ended the contract with Mr. Kamel Mohamed (SSN=223344) so try to delete his data from your database in case you know that you will be temporarily in his position.
--Hint: (Check if Mr. Kamel has dependents, works as a department manager, supervises any employees or works in any projects and handle these cases).

-- The new manager is here
INSERT INTO Employee (SSN, Fname, Lname, Manager_ID)
VALUES (11111, 'Ibrahim', 'Hegaz', 11111);


DELETE FROM Employee WHERE SSN = 223344;

DELETE FROM Dependent WHERE Essn = 223344;

UPDATE Department
SET Manager_SSN = 11111
WHERE Manager_SSN = 223344;

UPDATE Employee
SET Supervisor_SSN = 11111
WHERE Supervisor_SSN = 223344;

UPDATE Project
SET Project_Manager_SSN = 11111
WHERE Project_Name = 'X';


